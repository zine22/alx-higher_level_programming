Test file 2-matrix_divided module
import 'matrix_dividend' from 2-matrix_divided module
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

SUCCESS:
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]


FAILURE:
>>> matrix_divided([1, 2, 3, 4, 5], 3)
Traceback (most recent call last):
	  ...
	  TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided([[2, 7, 6], [1, 8, 5]], "2")
Traceback (most recent call last):
	  ...
	  TypeError: div must be a number


>>> matrix_divided([[3, 5, 7], [2, 9, 5]], 0)
Traceback (most recent call last):
	  ...
	  ZeroDivisionError: division by zero


>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, "h", 9]], 2)
Traceback (most recent call last):
	  ...
	  TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9, 10]], 3)
Traceback (most recent call last):
	  ...
	  TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[4, 5, 6], [2, 3, 4]], float("inf"))
Traceback (most recent call last):
	  ...
	  OverflowError: cannot convert float infinity to integer or float

>>> matrix_divided()
Traceback (most recent call last):
	  ...
	  TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([[2, 3, 4], [6, 2, 9]])
Traceback (most recent call last):
	  ...
	  TypeError: matrix_divided() missing 1 required positional argument: 'div'
